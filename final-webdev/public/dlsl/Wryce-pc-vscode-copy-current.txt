COMPONENTS:
import React, { useState } from 'react';

const Admin = () => {
  // Sample student data for demonstration
  const [students, setStudents] = useState([
    { id: 1, name: 'John Doe', course: 'BS Computer Science', status: 'Pending' },
    { id: 2, name: 'Jane Smith', course: 'BS Information Technology', status: 'Pending' },
    { id: 3, name: 'Mark Johnson', course: 'BS Entertainment Multimedia Computing', status: 'Pending' },
  ]);

  const handleAction = (id, action) => {
    setStudents((prevStudents) =>
      prevStudents.map((student) =>
        student.id === id
          ? {
              ...student,
              status: action === 'edit' ? student.status : action === 'approve' ? 'Approved' : 'Rejected',
            }
          : student
      )
    );
  };

  const handleEdit = (id) => {
    const newName = prompt('Enter new name:');
    const newCourse = prompt('Enter new course:');
    setStudents((prevStudents) =>
      prevStudents.map((student) =>
        student.id === id
          ? { ...student, name: newName || student.name, course: newCourse || student.course }
          : student
      )
    );
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.title}>Admin Dashboard</h1>
      <p style={styles.description}>Manage student accounts below:</p>
      <div style={styles.tableContainer}>
        <table style={styles.table}>
          <thead>
            <tr>
              <th style={styles.th}>Name</th>
              <th style={styles.th}>Course</th>
              <th style={styles.th}>Status</th>
              <th style={styles.th}>Actions</th>
            </tr>
          </thead>
          <tbody>
            {students.map((student) => (
              <tr key={student.id}>
                <td style={styles.td}>{student.name}</td>
                <td style={styles.td}>{student.course}</td>
                <td style={styles.td}>{student.status}</td>
                <td style={styles.td}>
                  <button style={styles.button} onClick={() => handleAction(student.id, 'approve')}>
                    Approve
                  </button>
                  <button style={styles.button} onClick={() => handleAction(student.id, 'reject')}>
                    Reject
                  </button>
                  <button style={styles.button} onClick={() => handleEdit(student.id)}>
                    Edit
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

const styles = {
  container: {
    padding: '20px',
    maxWidth: '800px',
    margin: '50px auto',
    border: '1px solid #ddd',
    borderRadius: '8px',
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
    textAlign: 'center',
  },
  title: {
    fontSize: '28px',
    fontWeight: 'bold',
    marginBottom: '20px',
    color: '#4CAF50',
  },
  description: {
    fontSize: '16px',
    marginBottom: '20px',
  },
  tableContainer: {
    overflowX: 'auto',
  },
  table: {
    width: '100%',
    borderCollapse: 'collapse',
  },
  th: {
    padding: '10px',
    backgroundColor: '#4CAF50',
    color: '#fff',
    border: '1px solid #ddd',
  },
  td: {
    padding: '10px',
    border: '1px solid #ddd',
    textAlign: 'center',
  },
  button: {
    padding: '5px 10px',
    margin: '0 5px',
    fontSize: '14px',
    backgroundColor: '#4CAF50',
    color: '#fff',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
};

export default Admin;







-----------------------------------------------------------------------------

Admin.js
import React, { useState } from 'react';

const Admin = () => {
  // Sample student data for demonstration
  const [students, setStudents] = useState([
    { id: 1, name: 'John Doe', course: 'BS Computer Science', status: 'Pending' },
    { id: 2, name: 'Jane Smith', course: 'BS Information Technology', status: 'Pending' },
    { id: 3, name: 'Mark Johnson', course: 'BS Entertainment Multimedia Computing', status: 'Pending' },
  ]);

  const handleAction = (id, action) => {
    setStudents((prevStudents) =>
      prevStudents.map((student) =>
        student.id === id
          ? {
              ...student,
              status: action === 'edit' ? student.status : action === 'approve' ? 'Approved' : 'Rejected',
            }
          : student
      )
    );
  };

  const handleEdit = (id) => {
    const newName = prompt('Enter new name:');
    const newCourse = prompt('Enter new course:');
    setStudents((prevStudents) =>
      prevStudents.map((student) =>
        student.id === id
          ? { ...student, name: newName || student.name, course: newCourse || student.course }
          : student
      )
    );
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.title}>Admin Dashboard</h1>
      <p style={styles.description}>Manage student accounts below:</p>
      <div style={styles.tableContainer}>
        <table style={styles.table}>
          <thead>
            <tr>
              <th style={styles.th}>Name</th>
              <th style={styles.th}>Course</th>
              <th style={styles.th}>Status</th>
              <th style={styles.th}>Actions</th>
            </tr>
          </thead>
          <tbody>
            {students.map((student) => (
              <tr key={student.id}>
                <td style={styles.td}>{student.name}</td>
                <td style={styles.td}>{student.course}</td>
                <td style={styles.td}>{student.status}</td>
                <td style={styles.td}>
                  <button style={styles.button} onClick={() => handleAction(student.id, 'approve')}>
                    Approve
                  </button>
                  <button style={styles.button} onClick={() => handleAction(student.id, 'reject')}>
                    Reject
                  </button>
                  <button style={styles.button} onClick={() => handleEdit(student.id)}>
                    Edit
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

const styles = {
  container: {
    padding: '20px',
    maxWidth: '800px',
    margin: '50px auto',
    border: '1px solid #ddd',
    borderRadius: '8px',
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
    textAlign: 'center',
  },
  title: {
    fontSize: '28px',
    fontWeight: 'bold',
    marginBottom: '20px',
    color: '#4CAF50',
  },
  description: {
    fontSize: '16px',
    marginBottom: '20px',
  },
  tableContainer: {
    overflowX: 'auto',
  },
  table: {
    width: '100%',
    borderCollapse: 'collapse',
  },
  th: {
    padding: '10px',
    backgroundColor: '#4CAF50',
    color: '#fff',
    border: '1px solid #ddd',
  },
  td: {
    padding: '10px',
    border: '1px solid #ddd',
    textAlign: 'center',
  },
  button: {
    padding: '5px 10px',
    margin: '0 5px',
    fontSize: '14px',
    backgroundColor: '#4CAF50',
    color: '#fff',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
};

export default Admin;



-----------------------------------------------------------------------------------

Enrollmentform.js

import React, { useState } from 'react';

const EnrollmentForm = () => {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    course: '', // Default to an empty string to ensure validation works
    email: '',
    paymentType: 'Gcash', // Default value
    paymentAmount: '', // User input for payment amount
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    // Check if all fields are filled
    const { firstName, lastName, course, email, paymentAmount } = formData;
    if (!firstName || !lastName || !course || !email || !paymentAmount) {
      alert('All fields are required. Please complete the form.');
      return;
    }

    // Validate email format
    if (!email.includes('@') || !email.includes('.')) {
      alert('Invalid email address. Please include "@" and "." in your email.');
      return;
    }

    // Check payment amount is valid (>= 7000)
    if (Number(paymentAmount) < 7000) {
      alert('Payment amount must be at least 7000 pesos.');
      return;
    }

    // Successful submission
    alert(
      `Enrollment submitted for ${firstName} ${lastName}, Course: ${course}, Payment Type: ${formData.paymentType}, Amount: ${paymentAmount}`
    );

    // Redirect to GCash
    window.open('https://gcash.com', '_blank');
  };

  return (
    <div style={styles.container}>
      <h2 style={styles.title}>Enrollment Form</h2>
      <form onSubmit={handleSubmit} style={styles.form}>
        <div style={styles.inputGroup}>
          <label style={styles.label} htmlFor="firstName">First Name:</label>
          <input
            type="text"
            id="firstName"
            name="firstName"
            value={formData.firstName}
            onChange={handleChange}
            style={styles.input}
          />
        </div>

        <div style={styles.inputGroup}>
          <label style={styles.label} htmlFor="lastName">Last Name:</label>
          <input
            type="text"
            id="lastName"
            name="lastName"
            value={formData.lastName}
            onChange={handleChange}
            style={styles.input}
          />
        </div>

        {/* Updated Course Section as a Select */}
        <div style={styles.inputGroup}>
          <label style={styles.label} htmlFor="course">Course:</label>
          <select
            id="course"
            name="course"
            value={formData.course}
            onChange={handleChange}
            style={styles.select}
          >
            <option value="">-- Select a Course --</option>
            <option value="BS Computer Science">BS Computer Science</option>
            <option value="BS Information Technology">BS Information Technology</option>
            <option value="BS Entertainment Multimedia Computing">BS Entertainment Multimedia Computing</option>
          </select>
        </div>

        <div style={styles.inputGroup}>
          <label style={styles.label} htmlFor="email">Email:</label>
          <input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            style={styles.input}
          />
        </div>

        {/* Select Section for Payment Type */}
        <div style={styles.inputGroup}>
          <label style={styles.label} htmlFor="paymentType">Type of Payment:</label>
          <select
            id="paymentType"
            name="paymentType"
            value={formData.paymentType}
            onChange={handleChange}
            style={styles.select}
          >
            <option value="Gcash">Gcash</option>
          </select>
        </div>

        {/* Input Section for Payment Amount */}
        <div style={styles.inputGroup}>
          <label style={styles.label} htmlFor="paymentAmount">Amount of Payment:</label>
          <input
            type="number"
            id="paymentAmount"
            name="paymentAmount"
            value={formData.paymentAmount}
            onChange={handleChange}
            style={styles.input}
            placeholder="Enter amount (minimum 7000)"
          />
        </div>

        <button type="submit" style={styles.submitButton}>Submit Enrollment</button>
      </form>
    </div>
  );
};

const styles = {
  container: {
    padding: '20px',
    maxWidth: '600px',
    margin: '0 auto',
    backgroundColor: '#ffffff',
    borderRadius: '8px',
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
  },
  title: {
    fontSize: '24px',
    fontWeight: '600',
    color: '#388E3C',
    textAlign: 'center',
    marginBottom: '20px',
  },
  form: {
    display: 'flex',
    flexDirection: 'column',
  },
  inputGroup: {
    marginBottom: '15px',
  },
  label: {
    fontSize: '16px',
    fontWeight: '500',
    color: '#555',
  },
  input: {
    padding: '10px',
    marginTop: '5px',
    fontSize: '16px',
    borderRadius: '4px',
    border: '1px solid #ccc',
  },
  select: {
    padding: '10px',
    marginTop: '5px',
    fontSize: '16px',
    borderRadius: '4px',
    border: '1px solid #ccc',
  },
  submitButton: {
    backgroundColor: '#4CAF50',
    color: '#fff',
    fontSize: '18px',
    padding: '10px 20px',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
  },
};

export default EnrollmentForm; 

-----------------------------------------------------------------------------------------

Footer.js:
import React from 'react';

const Footer = () => {
  return (
    <footer style={styles.footer}>
      <p style={styles.text}>© 2024 All Rights Reserved. Created by Group 8</p>
    </footer>
  );
};

const styles = {
  footer: {
    backgroundColor: '#f4f4f4',
    textAlign: 'center',
    padding: '10px 0',
    borderTop: '1px solid #ddd',
    position: 'fixed',
    bottom: '0',
    width: '100%',
  },
  text: {
    fontSize: '14px',
    color: '#333',
    margin: 0,
  },
};

export default Footer;


----------------------------------------------------------------------------

Header.js 

import React from 'react';
import { Link, useNavigate } from 'react-router-dom';

const Header = ({ parentEmail, setParentEmail }) => {
  const navigate = useNavigate();

  const handleLogout = () => {
    setParentEmail(null); // Clear the parent's email on logout
    navigate('/'); // Redirect immediately to the home page
  };

  return (
    <header style={styles.header}>
      <h1 style={styles.title}>DLSL Enrollment System</h1>
      <nav style={styles.nav}>
        <Link to="/" style={styles.button}>Home</Link>
        <Link to="/login" style={styles.button}>Login</Link>
        {parentEmail && (
          <button onClick={handleLogout} style={styles.button}>Logout</button>
        )}
      </nav>
      {parentEmail && (
        <div style={styles.parentEmail}>Parent: {parentEmail}</div>
      )}
    </header>
  );
};

const styles = {
  header: {
    background: 'linear-gradient(135deg, #4CAF50, #388E3C)',
    color: 'white',
    padding: '15px 20px',
    textAlign: 'center',
    borderRadius: '8px',
    marginBottom: '20px',
  },
  title: {
    fontFamily: '"Montserrat", sans-serif',
    fontSize: '28px',
    fontWeight: '600',
    margin: '0',
  },
  nav: {
    marginTop: '10px',
    display: 'flex',
    justifyContent: 'center',
    gap: '15px',
  },
  button: {
    textDecoration: 'none',
    fontSize: '16px',
    color: 'white',
    padding: '8px 16px',
    backgroundColor: '#388E3C',
    borderRadius: '5px',
    textTransform: 'uppercase',
    fontWeight: '500',
    transition: 'background-color 0.3s ease',
    cursor: 'pointer',
  },
  parentEmail: {
    marginTop: '10px',
    fontSize: '18px',
    color: '#fff',
    fontWeight: '500',
  },
};

export default Header;

------------------------------------------------------------------------



Home.js

import React from 'react';
import { Link } from 'react-router-dom';

const Home = () => {
  return (
    <div style={styles.container}>
      <h2 style={styles.title}>Welcome to De La Salle Lipa</h2>
      <p style={styles.description}>
        De La Salle Lipa (DLSL) is a prestigious Catholic educational institution in Lipa City, Batangas, dedicated to
        nurturing the academic, moral, and spiritual development of its students. Established in 1962, the school upholds
        the Lasallian values of faith, zeal for service, and communion in mission, providing a comprehensive education
        from preschool to graduate studies. DLSL is committed to shaping future leaders who are not only skilled and
        knowledgeable but also compassionate and socially responsible individuals. With state-of-the-art facilities, a
        wide range of academic and extracurricular programs, and a focus on holistic development, DLSL is recognized for
        producing graduates who excel in their chosen fields and make significant contributions to society. As a member
        of the global Lasallian network, the institution continues to build on its legacy of excellence in education,
        preparing students to face the challenges of the future with integrity and purpose.
      </p>

      {/* Our Campus Section */}
      <section style={styles.section}>
        <h3 style={styles.subTitle}>Our Campus</h3>
        <p style={styles.text}>Explore the beauty and facilities of De La Salle Lipa's campus.</p>
        <div style={styles.imageContainer}>
          <img
            src={`${process.env.PUBLIC_URL}/dlsl/20170210_114314.jpg`}
            alt="DLSL Facade"
            style={styles.image}
          />
          <img
            src={`${process.env.PUBLIC_URL}/dlsl/DSC_4822.jpg`}
            alt="DLSL Academic Hall"
            style={styles.image}
          />
        </div>
      </section>

      {/* Mission Section */}
      <section style={styles.section}>
        <h3 style={styles.subTitle}>Mission</h3>
        <p style={styles.text}>
          De La Salle Lipa is a Catholic institution of higher learning whose mission is to provide quality education
          that responds to the needs of society through the development of human resources for the service of God,
          country, and humanity.
        </p>
      </section>

      {/* Vision Section */}
      <section style={styles.section}>
        <h3 style={styles.subTitle}>Vision</h3>
        <p style={styles.text}>
          De La Salle Lipa envisions itself as a world-class institution of higher learning, fostering a culture of
          excellence, transformative education, and meaningful community engagement.
        </p>
      </section>

      {/* Login Link Section */}
      <section style={styles.enrollmentLinkContainer}>
        <Link to="/login" style={styles.enrollmentLink}>
          Click here to login and proceed with enrollment at De La Salle Lipa
        </Link>
      </section>
    </div>
  );
};

const styles = {
  container: {
    padding: '40px 20px',
    background: '#f4f6f7',
    borderRadius: '10px',
    boxShadow: '0 0 15px rgba(0, 0, 0, 0.1)',
    animation: 'fadeIn 1s ease-in',
    maxWidth: '1100px',
    margin: '0 auto',
    fontFamily: '"Lora", serif', // Changed font to Lora for a classic look
  },
  title: {
    color: '#2c3e50',
    textAlign: 'center',
    fontSize: '36px',
    fontWeight: 'bold',
    marginBottom: '30px',
    letterSpacing: '1px',
    fontFamily: '"Poppins", sans-serif', // Changed font to Poppins for the title
  },
  description: {
    fontSize: '18px',
    lineHeight: '1.8',
    textAlign: 'justify',
    marginBottom: '40px',
    color: '#34495e',
    fontFamily: '"Lora", serif', // Font for the description section
  },
  section: {
    marginBottom: '40px',
  },
  subTitle: {
    color: '#2c3e50',
    fontSize: '26px',
    marginBottom: '15px',
    textAlign: 'center',
    fontWeight: '600',
    letterSpacing: '1px',
    fontFamily: '"Poppins", sans-serif', // Font for subtitles
  },
  text: {
    fontSize: '18px',
    lineHeight: '1.8',
    textAlign: 'justify',
    marginBottom: '25px',
    color: '#7f8c8d',
    fontFamily: '"Lora", serif', // Font for text content
  },
  imageContainer: {
    display: 'flex',
    justifyContent: 'space-between',
    gap: '25px',
    marginTop: '20px',
    flexWrap: 'wrap',
    justifyItems: 'center',
  },
  image: {
    width: '48%',
    height: 'auto',
    objectFit: 'cover',
    borderRadius: '8px',
    boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)',
  },
  enrollmentLinkContainer: {
    textAlign: 'center',
    marginTop: '40px',
  },
  enrollmentLink: {
    fontSize: '20px',
    color: '#3498db',
    textDecoration: 'none',
    fontWeight: 'bold',
    padding: '15px 25px',
    borderRadius: '8px',
    backgroundColor: '#ecf0f1',
    transition: 'background-color 0.3s ease, transform 0.3s ease',
    fontFamily: '"Poppins", sans-serif', // Font for the link
  },
  enrollmentLinkHover: {
    backgroundColor: '#d5dbdb',
    transform: 'scale(1.05)',
  },
};

export default Home;



---------------------------------------------------------------------------


Login.js

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const Login = ({ setParentEmail }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [role, setRole] = useState('');
  const [errors, setErrors] = useState([]);
  const navigate = useNavigate();

  // Predefined admin credentials
  const adminAccounts = [
    { email: 'admin1@dlsl.edu.ph', password: 'admin123' },
    { email: 'admin2@dlsl.edu.ph', password: 'admin456' },
    { email: 'admin3@dlsl.edu.ph', password: 'admin789' },
  ];

  const handleSubmit = (e) => {
    e.preventDefault();
    const newErrors = [];

    // Regex for validating emails
    const studentRegex = /^[a-z0-9._%+-]+@dlsl\.edu\.ph$/;
    const parentRegex = /^[a-zA-Z0-9._%+-]+@(gmail\.com|yahoo\.com|dlsl\.edu\.ph)$/;

    // Admin Login Check
    const isAdmin = adminAccounts.some(
      (admin) => admin.email === username && admin.password === password
    );

    if (isAdmin) {
      alert('Welcome, Admin!');
      navigate('/admin');
      return;
    }

    // Email Validation
    if (!username) {
      newErrors.push('Please input your email.');
    } else {
      if (role === 'Student') {
        if (!studentRegex.test(username)) {
          if (!username.includes('@dlsl.edu.ph')) {
            newErrors.push('Please use the @dlsl.edu.ph format if you\'re a student.');
          } else if (/[A-Z]/.test(username)) {
            newErrors.push('Please only use lowercase letters in your email.');
          }
        }
      } else if (role === 'Parent') {
        if (!parentRegex.test(username)) {
          newErrors.push('Please use a valid Gmail, Yahoo, or DLSL email address.');
        }
      }
    }

    // Password Validation
    if (!password) {
      newErrors.push('Please fill in your password.');
    }

    // Role Validation
    if (!role) {
      newErrors.push('Please select a role.');
    }

    // If there are errors, set them and stop submission
    if (newErrors.length > 0) {
      setErrors(newErrors);
      return;
    }

    // Authentication Logic
    if (role === 'Student' && studentRegex.test(username)) {
      navigate('/student-dashboard');
    } else if (role === 'Parent' && parentRegex.test(username)) {
      if (setParentEmail) {
        setParentEmail(username);  // Call the parent email setter correctly
      } else {
        console.error('setParentEmail function is not provided!');
      }
      navigate('/parent-dashboard');
    } else {
      setErrors(['Invalid username or password.']);
    }
  };

  return (
    <div style={styles.container}>
      <h2 style={styles.title}>Login</h2>
      <form onSubmit={handleSubmit} style={styles.form}>
        <div style={styles.inputContainer}>
          <input
            type="text"
            placeholder="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            style={styles.input}
          />
        </div>
        <div style={styles.inputContainer}>
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={styles.input}
          />
        </div>
        <div style={styles.inputContainer}>
          <label htmlFor="role" style={styles.label}>Role</label>
          <select
            id="role"
            value={role}
            onChange={(e) => setRole(e.target.value)}
            style={styles.select}
          >
            <option value="">Select Role</option>
            <option value="Student">Student</option>
            <option value="Parent">Parent</option>
          </select>
        </div>
        {errors.length > 0 && (
          <div style={styles.errorContainer}>
            {errors.map((error, index) => (
              <p key={index} style={styles.error}>{error}</p>
            ))}
          </div>
        )}
        <button type="submit" style={styles.button}>Login</button>
      </form>
    </div>
  );
};

const styles = {
  container: {
    maxWidth: '400px',
    margin: '0 auto',
    padding: '20px',
    borderRadius: '8px',
    backgroundColor: '#f9f9f9',
    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',
  },
  title: {
    textAlign: 'center',
    fontSize: '24px',
    fontWeight: '600',
    marginBottom: '20px',
  },
  form: {
    display: 'flex',
    flexDirection: 'column',
    gap: '15px',
  },
  inputContainer: {
    display: 'flex',
    flexDirection: 'column',
  },
  input: {
    padding: '10px',
    fontSize: '16px',
    border: '1px solid #ccc',
    borderRadius: '4px',
    outline: 'none',
  },
  label: {
    fontSize: '16px',
    marginBottom: '5px',
  },
  select: {
    padding: '10px',
    fontSize: '16px',
    border: '1px solid #ccc',
    borderRadius: '4px',
  },
  errorContainer: {
    marginTop: '10px',
  },
  error: {
    color: 'red',
    fontSize: '14px',
    textAlign: 'center',
    margin: '5px 0',
  },
  button: {
    padding: '12px',
    backgroundColor: '#388E3C',
    color: 'white',
    fontSize: '16px',
    border: 'none',
    borderRadius: '5px',
    cursor: 'pointer',
    transition: 'background-color 0.3s ease',
  },
};

export default Login;




-------------------------------------------------------------------



ParentDashboard.js 

import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

const ParentDashboard = ({ parentEmail }) => {
  const navigate = useNavigate();

  const [students, setStudents] = useState([
    { id: 1, name: "Ian Tracy C. Orillaza", yearLevel: "1st Year College", program: "BS in Comsci", status: "Pending" },
    { id: 2, name: "Wryce Eyrie Hizon", yearLevel: "3rd Year College", program: "BS in Comsci", status: "Enrolled" },
    { id: 3, name: "Rice Ariel Hizon", yearLevel: "4th Year College", program: "BS in Comsci", status: "Pending" },
  ]);

  const [newStudent, setNewStudent] = useState({ name: "", yearLevel: "", program: "" });
  const [studentToRemove, setStudentToRemove] = useState("");
  const [errorMessage, setErrorMessage] = useState("");

  const handleStudentClick = (id) => {
    navigate(`/student-details/${id}`);
  };

  const handleAddStudent = () => {
    // Basic validation for input fields
    if (newStudent.name && newStudent.yearLevel && newStudent.program) {
      const nextId = students.length ? students[students.length - 1].id + 1 : 1;
      setStudents([...students, { id: nextId, ...newStudent, status: "Pending" }]);
      setNewStudent({ name: "", yearLevel: "", program: "" });
      setErrorMessage("");  // Clear any error message
    } else {
      setErrorMessage("Please fill out all fields for the new student.");
    }
  };

  const handleRemoveStudent = () => {
    if (studentToRemove.trim()) {
      const filteredStudents = students.filter(
        (student) => student.name.toLowerCase() !== studentToRemove.toLowerCase()
      );
      if (filteredStudents.length === students.length) {
        setErrorMessage("No student found with that name.");
      } else {
        setStudents(filteredStudents);
        setStudentToRemove("");
        setErrorMessage("");  // Clear error after successful removal
      }
    } else {
      setErrorMessage("Please enter a student's name to remove.");
    }
  };

  const handleLogout = () => {
    // Clear login information (this may involve clearing session storage, local storage, or context)
    // For now, let's assume it's a simple redirect, and no actual session management is involved.
    // You may want to clear any authentication tokens or local storage here if applicable.
    navigate("/"); // Redirect to the homepage
  };

  return (
    <div className="dashboard">
      {/* Parent Email (Positioned on the left side) */}
      <div style={styles.parentEmail}>Parent: {parentEmail}</div>

      {/* Dashboard Content */}
      <h3>Student Lists</h3>  {/* Updated Heading */}

      {/* Error Message */}
      {errorMessage && <p style={styles.error}>{errorMessage}</p>}

      <table className="student-table">
        <thead>
          <tr>
            <th>#</th>
            <th>Student Name</th>
            <th>Year Level</th>
            <th>College Program</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody>
          {students.map((student, index) => (
            <tr key={student.id}>
              <td>{index + 1}</td>
              <td className="clickable" onClick={() => handleStudentClick(student.id)}>
                {student.name}
              </td>
              <td>{student.yearLevel}</td>
              <td>{student.program}</td>
              <td>{student.status}</td>
            </tr>
          ))}
        </tbody>
      </table>

      <div className="controls">
        <div>
          <h4>Add New Student</h4>
          <input
            type="text"
            placeholder="Student Name"
            value={newStudent.name}
            onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })}
          />
          <input
            type="text"
            placeholder="Year Level"
            value={newStudent.yearLevel}
            onChange={(e) => setNewStudent({ ...newStudent, yearLevel: e.target.value })}
          />
          <input
            type="text"
            placeholder="College Program"
            value={newStudent.program}
            onChange={(e) => setNewStudent({ ...newStudent, program: e.target.value })}
          />
          <button onClick={handleAddStudent}>Add Student</button>
        </div>

        <div>
          <h4>Remove Student</h4>
          <input
            type="text"
            placeholder="Enter Student Name to Remove"
            value={studentToRemove}
            onChange={(e) => setStudentToRemove(e.target.value)}
          />
          <button onClick={handleRemoveStudent}>Remove Student</button>
        </div>

        {/* Removed the Logout Button under "Remove Student" */}
      </div>
    </div>
  );
};

const styles = {
  parentEmail: {
    position: "absolute",  // Ensures the email stays fixed in place
    top: "10px",          // Adjust as needed for positioning
    left: "20px",         // Aligns it to the left side
    fontSize: "16px",
    fontWeight: "bold",
    color: "#2e7d32", // Color for parent email
  },
  error: {
    color: "red",
    fontSize: "14px",
    textAlign: "center",
    margin: "10px 0",
  },
};

export default ParentDashboard;


----------------------------------------------------------------------




Student Dashboard.js 

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const StudentDashboard = () => {
  const navigate = useNavigate();
  const [enrollmentStatus, setEnrollmentStatus] = useState('Pending'); // Example enrollment status
  const [profileDetails, setProfileDetails] = useState({
    name: '',
    email: '',
    address: '',
  });
  const [studentsList, setStudentsList] = useState([
    { name: 'John Doe', status: 'Enrolled' },
    { name: 'Jane Smith', status: 'Pending' },
  ]);

  // Handle enrollment form submission
  const handleEnrollmentSubmit = (e) => {
    e.preventDefault();
    alert('Enrollment submitted!');
    setEnrollmentStatus('Submitted');
  };

  // Handle profile update
  const handleProfileUpdate = (e) => {
    e.preventDefault();
    alert('Profile updated!');
    // In a real application, this would update the backend
  };

  return (
    <div style={styles.dashboardContainer}>
      <h2>Welcome to the Student Dashboard</h2>

      {/* Enrollment Information */}
      <div style={styles.section}>
        <h3>Submit Enrollment Information</h3>
        <form onSubmit={handleEnrollmentSubmit} style={styles.form}>
          <input
            type="text"
            placeholder="Student Name"
            value={profileDetails.name}
            onChange={(e) => setProfileDetails({ ...profileDetails, name: e.target.value })}
            style={styles.input}
          />
          <input
            type="email"
            placeholder="Email Address"
            value={profileDetails.email}
            onChange={(e) => setProfileDetails({ ...profileDetails, email: e.target.value })}
            style={styles.input}
          />
          <textarea
            placeholder="Address"
            value={profileDetails.address}
            onChange={(e) => setProfileDetails({ ...profileDetails, address: e.target.value })}
            style={styles.textarea}
          />
          <button type="submit" style={styles.button}>Submit Enrollment</button>
        </form>
      </div>

      {/* Enrollment Status */}
      <div style={styles.section}>
        <h3>Enrollment Status</h3>
        <p>Status: {enrollmentStatus}</p>
      </div>

      {/* List of Enrolled Students */}
      <div style={styles.section}>
        <h3>List of Enrolled Students</h3>
        <ul>
          {studentsList.map((student, index) => (
            <li key={index}>{student.name} - {student.status}</li>
          ))}
        </ul>
      </div>

      {/* Update Profile */}
      <div style={styles.section}>
        <h3>Update Profile</h3>
        <form onSubmit={handleProfileUpdate} style={styles.form}>
          <input
            type="text"
            placeholder="Name"
            value={profileDetails.name}
            onChange={(e) => setProfileDetails({ ...profileDetails, name: e.target.value })}
            style={styles.input}
          />
          <input
            type="email"
            placeholder="Email"
            value={profileDetails.email}
            onChange={(e) => setProfileDetails({ ...profileDetails, email: e.target.value })}
            style={styles.input}
          />
          <textarea
            placeholder="Address"
            value={profileDetails.address}
            onChange={(e) => setProfileDetails({ ...profileDetails, address: e.target.value })}
            style={styles.textarea}
          />
          <button type="submit" style={styles.button}>Update Profile</button>
        </form>
      </div>
    </div>
  );
};

const styles = {
  dashboardContainer: {
    padding: '20px',
    borderRadius: '8px',
    backgroundColor: '#f9f9f9',
    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',
  },
  section: {
    marginBottom: '20px',
  },
  form: {
    display: 'flex',
    flexDirection: 'column',
    gap: '10px',
  },
  input: {
    padding: '10px',
    fontSize: '16px',
    border: '1px solid #ccc',
    borderRadius: '4px',
  },
  textarea: {
    padding: '10px',
    fontSize: '16px',
    border: '1px solid #ccc',
    borderRadius: '4px',
    height: '100px',
    resize: 'vertical',
  },
  button: {
    padding: '12px',
    backgroundColor: '#388E3C',
    color: 'white',
    fontSize: '16px',
    border: 'none',
    borderRadius: '5px',
    cursor: 'pointer',
  },
};

export default StudentDashboard;




--------------------------------------------------------------------------------------

App.js 

import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Header from './components/Header';
import Home from './components/Home';
import EnrollmentForm from './components/EnrollmentForm';
import Footer from './components/Footer';
import Login from './components/Login';
import Admin from './components/Admin';

const App = () => {
  return (
    <Router>
      <div style={styles.appContainer}>
        <Header />
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/login" element={<Login />} />
          <Route path="/enroll" element={<EnrollmentForm />} />
          <Route path="/admin" element={<Admin />} />
        </Routes>
        <Footer />
      </div>
    </Router>
  );
};

const styles = {
  appContainer: {
    display: 'flex',
    flexDirection: 'column',
    minHeight: '100vh',
  },
};

export default App;



------------------------------------------------------------------



Index.css

/* Existing CSS */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

body {
  margin: 0;
  font-family: Arial, sans-serif;
  background-color: #f5f5f5;
}

/* New styles for Parent Dashboard */
.dashboard {
  animation: fadeIn 0.5s;
  text-align: center;
}

header {
  background-color: #4CAF50;
  color: white;
  padding: 10px 0;
  font-size: 18px;
}

nav button {
  margin: 0 5px;
  padding: 5px 10px;
  border: none;
  background-color: #fff;
  color: #4CAF50;
  border-radius: 3px;
  cursor: pointer;
  font-weight: bold;
}

nav button:hover {
  background-color: #ddd;
}

.student-table {
  margin: 20px auto;
  border-collapse: collapse;
  width: 80%;
  text-align: center;
  background-color: #fff;
}

.student-table th,
.student-table td {
  border: 1px solid #000;
  padding: 8px;
}

.student-table th {
  background-color: #4CAF50;
  color: white;
}

.student-table .clickable {
  color: blue;
  text-decoration: underline;
  cursor: pointer;
}

.student-table .clickable:hover {
  color: darkblue;
}

.controls {
  margin-top: 20px;
}

.controls input {
  margin: 5px;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

.controls button {
  margin: 5px;
  padding: 8px 15px;
  border: none;
  border-radius: 3px;
  background-color: #4CAF50;
  color: white;
  cursor: pointer;
  font-weight: bold;
}

.controls button:hover {
  background-color: #45a049;
}



---------------------------------------------------------------------

Index.js 


import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);






----------------------------------------------------------








